{"version":3,"sources":["services/persons.js","components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","filter","onChange","handleChange","Persons","persons","map","person","name","number","onClick","deletePerson","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setNotification","useEffect","personService","initialPersons","personsToShow","toLowerCase","includes","event","console","log","target","preventDefault","nameObject","existingPerson","find","length","window","confirm","updated","setTimeout","catch","error","n","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b3b458a.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n} \n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst eradicate = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, eradicate }","const Filter = ( props ) => {\n    return (\n      <div>\n      filter shown with <input\n        value={props.filter}\n        onChange={props.handleChange}\n        />\n      </div>\n    )\n  }\n  \nexport default Filter","const Persons = (props) => {\n    \n    return (\n      <ul>        \n        {props.persons.map((person) => \n        <li key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => {props.deletePerson(person)}}>delete</button>  \n        </li>\n        )}\n      </ul>\n    )\n}\n\nexport default Persons\n","const PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                name: <input\n                    value={props.newName}\n                    onChange={props.handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={props.newNumber}\n                    onChange={props.handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","const Notification = ({ notification }) => {\n    if (notification === null) {\n      return null\n    }\n  \n    return (\n      <div className={notification.type}>\n        {notification.message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notification, setNotification] = useState({ message: null, type: null })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    const existingPerson = persons.find(person => person.name === newName)\n    console.log(existingPerson)\n    console.log(nameObject)\n\n    if (persons.filter(person => person.name === nameObject.name).length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace old number '${existingPerson.number}' with '${nameObject.number}'?`)) {\n        personService\n          .update(existingPerson.id, { ...existingPerson, number: newNumber })\n          .then(updated => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : updated))\n            setNewName('')\n            setNewNumber('')\n            setNotification({ message: `Updated ${newName} with number ${nameObject.number}`, type: 'success' })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setPersons(persons.filter(n => n.name !== newName))\n            setNotification({ message: `Information of ${newName} has already been removed from server`, type: 'error' })\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n      }\n    } else {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification({ message: `Added ${returnedPerson.name}`, type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`))\n      personService\n        .eradicate(person.id)\n        .then(response => {\n          setPersons(persons.filter(n => n.id !== person.id))\n          setNotification({ message: `Deleted ${person.name}`, type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n  }\n\n  const personsToShow =\n    persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n      <Filter filter={newFilter} handleChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n\n      <PersonForm newName={newName} newNumber={newNumber} persons={persons} addPerson={addPerson}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}